/**=========================================================
 * app.js
 * 初始化程序
 * @author: haili042
 =========================================================*/

// 一个项目只有一个 ng-app
var App = angular.module('app', [
    'ui.router'
]);

// 这里的run方法只会在angular启动的时候运行一次。
App.run(function ($rootScope, $state, $stateParams, $window, $templateCache, APP_INFO) {

    // 由于整个应用都会和路由打交道，所以这里把$state和$stateParams这两个对象放到$rootScope上，方便其它地方引用和注入。
    $rootScope.$state = $state;
    $rootScope.$stateParams = $stateParams;

    // 应用信息, 在 constants.js 内
    $rootScope.app = APP_INFO;

});


/**=========================================================
 * Module: config.js
 * 配置路由
 * @author: haili042
 =========================================================*/

App
    // 路由配置
    .config(['$stateProvider', '$urlRouterProvider',
    function ($stateProvider, $urlRouterProvider) {
        'use strict';

        // 配置无效路由, $urlRouterProvider 负责配置指定url之外的url请求
        $urlRouterProvider.otherwise('/app/home');

        // 路由配置
        // 注意这里采用的是ui-router这个路由，而不是ng原生的路由。ng原生的路由不能支持嵌套视图
        $stateProvider

            //
            // 组件都嵌套在父路由内
            // -----------------------------------
            .state('app', {
                url: '/app',
                abstract: true, // 表明此状态不能被显性激活，只能被子状态隐性激活(子状态激活同时, 父状态也激活)
                templateUrl: 'app/tpl/page/layout.html' // 布局
            })

            // 子路由, 点标记法(推荐)
            .state('app.home', {
                url: '/home',
                templateUrl: 'app/tpl/home/home.html'
            })
            .state('app.content', {
                //url: '/{tpl: [0-9]{1,4}}', // 匹配数字
                url: '/{tpl: [a-zA-Z$_][a-zA-Z0-9_$]*}', // 匹配变量名
                views: {
                    // @app 表示替换的是 app 状态下的匿名 ui-view
                    '@app': {
                        templateUrl: function ($routeParams) {
                            var page = $routeParams.page || '404' ;
                            return 'app/tpl/page/' + page + '.html';
                        }
                    }
                }
            })

            //
            // 单页路由
            // -----------------------------------
            .state('page', {
                url: '/page',
                abstract: true,
                templateUrl: 'app/tpl/page/page.html'
            })
            .state('page.login', {
                url: '/login',
                title: "Login",
                templateUrl: 'app/tpl/page/login.html'
            })
            .state('page.404', {
                url: '/404',
                templateUrl: 'app/tpl/page/404.html'
            })
        ;
    }])

    // 请求头配置
    .config(['$httpProvider', 'APP_HEADER', function($httpProvider, APP_HEADER) {

        var max_age = 'max-age=' + APP_HEADER['max-age'] || 0;

        if (!$httpProvider.defaults.headers.get) {
            $httpProvider.defaults.headers.get = {};
        }

        // 设置缓存
        $httpProvider.defaults.headers.get['Cache-Control'] = max_age;
    }])
;
/**=========================================================
 * constant.js
 * 定义全局变量, 调用的时候注入即可
 * @author: haili042
 =========================================================*/

App
    // 应用信息
    .constant('APP_INFO', {
        'name':                   'haili-ng-bstrp',
        'description':            'haili angular bootstrap admin',
        'year':                   '2016'
    })

    // 全局颜色
    .constant('APP_COLORS', {
        'primary':                '#5d9cec',
        'success':                '#27c24c',
        'info':                   '#23b7e5',
        'warning':                '#ff902b',
        'danger':                 '#f05050',
        'inverse':                '#131e26',
        'green':                  '#37bc9b',
        'pink':                   '#f532e5',
        'purple':                 '#7266ba',
        'dark':                   '#3a3f51',
        'yellow':                 '#fad732',
        'gray-darker':            '#232735',
        'gray-dark':              '#3a3f51',
        'gray':                   '#dde6e9',
        'gray-light':             '#e4eaec',
        'gray-lighter':           '#edf1f2'
    })

    // 媒体查询
    .constant('APP_MEDIAQUERY', {
        'desktopLG':             1200,
        'desktop':                992,
        'tablet':                 768,
        'mobile':                 480
    })

    // 请求响应头设置
    .constant('APP_HEADER', {
        'max-age':                 0
    })

    // 定义依赖的模块
    .constant('APP_REQUIRES', {
        // jquery 模块
        // ...

        // angular 模块
        modules: [
        ]
    })
;


/**=========================================================
 * Module: login-ctrl.js
 * 登录控制器
 * @author: haili042
 =========================================================*/

App.controller('LoginCtrl', ['$http', '$state', '$scope', function($http, $state, $scope) {

    $scope.name = '';

    $scope.login = function () {
        var url = '',
            params = {};

        $scope.authMsg = '';

        if ($scope.loginForm.$valid) { // 校验表单
            $http.post(url, params)
                .then(function (res) {

                });
        }

    };
}]);
/**=========================================================
 * Module: service/route-helpers.js
 * 检测路由是否存在, 以及方便注入依赖
 * @author: haili042
 =========================================================*/

App.provider('RouteHelper', ['APP_REQUIRES', function(appRequire) {
    'use strict';

    this.basepath = function (uri) {
        return 'app/views/' + uri;
    };

    this.resolveFor = function () {
        var args = arguments;
        return {
            deps: ['$ocLazyLoad', '$q', function ($oLL, $q) {
                var promise = $q.when(1)
            }]
        };
    };

    this.$get = function () {
        return {
            basepath: this.basepath
        };
    };
}]);